#In this SQL code, I'm querying a database that represents a digital media store to answer questions about the data.

#1. Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT FirstName, LastName, CustomerId, Country
FROM customers
WHERE Country <> "USA";

#2. Show only the Customers from Brazil.
SELECT FirstName, LastName
FROM customers
WHERE Country = "Brazil";

#3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry
FROM customers c
LEFT JOIN invoices i
ON i.CustomerID=c.CustomerId
WHERE i.BillingCountry = "Brazil";

#4. Show the Employees who are Sales Agents.
SELECT FirstName, LastName
FROM employees
WHERE Title="Sales Support Agent";

#5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM invoices
GROUP BY BillingCountry;

#6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT e.FirstName, e.LastName, i.InvoiceID
FROM employees e
JOIN customers c
ON c.SupportRepId=e.EmployeeId
JOIN invoices i
ON i.CustomerId=c.CustomerId;

#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT i.Total, c.FirstName, c.LastName, c.Country, e.FirstName, e.LastName
FROM customers c
JOIN employees e
ON c.SupportRepId=e.EmployeeId
JOIN invoices i
ON i.CustomerId=c.CustomerId;

#8. How many Invoices were there in 2009?
SELECT COUNT(InvoiceId) as total_invoices
FROM invoices
WHERE InvoiceDate LIKE "2009%";

#9. What are the total sales for 2009?
SELECT SUM(Total) AS total_sales
FROM invoices
WHERE InvoiceDate LIKE "2009%";

#10. Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.Name, invoice_items.InvoiceLineId
FROM tracks
INNER JOIN invoice_items
ON tracks.TrackId=invoice_items.TrackId;

#11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT tracks.Name AS Track, artists.Name AS Artist, invoice_items.InvoiceLineId
FROM invoice_items
LEFT JOIN tracks 
ON invoice_items.TrackId=tracks.TrackId
INNER JOIN albums 
ON albums.AlbumId=tracks.AlbumId
LEFT JOIN artists 
ON artists.ArtistId=albums.ArtistId;

#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name AS Track, albums.Title AS Album_name, media_types.Name AS Media_type, genres.Name AS Genre
FROM tracks
JOIN albums 
ON tracks.AlbumId=albums.AlbumId
JOIN media_types 
ON tracks.MediaTypeId=media_types.MediaTypeId
JOIN genres 
ON tracks.GenreId=genres.GenreId;

#13. Show the total sales made by each sales agent.
SELECT DISTINCT e.FirstName, e.LastName, ROUND(SUM(i.Total), 2) AS total_sales
FROM employees e
JOIN customers c
ON e.EmployeeId=c.SupportRepId
JOIN invoices i
ON c.CustomerId=i.CustomerId
WHERE e.Title="Sales Support Agent"
GROUP BY e.FirstName;

#14. Which sales agent made the most dollars in sales in 2009?
SELECT DISTINCT e.FirstName, e.LastName, ROUND(SUM(i.Total), 2) AS total_sales
FROM employees e
JOIN customers c
ON e.EmployeeId=c.SupportRepId
JOIN invoices i
ON c.CustomerId=i.CustomerId
WHERE e.Title="Sales Support Agent" 
AND i.InvoiceDate LIKE "2009%"
GROUP BY e.FirstName
ORDER BY total_sales DESC LIMIT 1;

#15. Show the name of all of the artists and the name of the albums they made. 
SELECT artists.Name, albums.Title
FROM artists
INNER JOIN albums
ON artists.ArtistId=albums.ArtistId
GROUP BY artists.Name;

#16. Which artist has the most albums and how many albums do they have?
SELECT artists.Name, COUNT(albums.Title) AS total_albums
FROM artists
INNER JOIN albums
ON artists.ArtistId=albums.ArtistId
GROUP BY artists.Name
ORDER BY total_albums DESC
LIMIT 1;

#17. How many tracks are in each playlist? 
SELECT playlists.Name, COUNT(tracks.TrackId) AS number_of_tracks
FROM playlists
JOIN playlist_track
ON playlists.PlaylistId=playlist_track.PlaylistId
JOIN tracks
ON playlist_track.TrackId=tracks.TrackId
GROUP BY playlists.Name
ORDER BY number_of_tracks DESC;

#18. How many tracks are in each genre?
SELECT genres.Name, COUNT(tracks.TrackId) AS tracks
FROM tracks
INNER JOIN genres
ON tracks.GenreId=genres.GenreId
GROUP BY genres.Name
ORDER BY tracks DESC;

#19. Which track sold the most and how much revenue did the track bring in? 
SELECT tracks.Name, ROUND(SUM(invoice_items.UnitPrice*invoice_items.Quantity),2) AS total_revenue
FROM invoice_items
INNER JOIN tracks
ON invoice_items.TrackId=tracks.TrackId
GROUP BY tracks.Name
ORDER BY total_revenue DESC
LIMIT 1;

#20. What was the total revenue for Jazz tracks? 
SELECT ROUND(SUM(invoice_items.UnitPrice*invoice_items.Quantity),2) AS total_revenue
FROM invoice_items
INNER JOIN tracks
ON invoice_items.TrackId=tracks.TrackId
WHERE tracks.GenreId="2";
